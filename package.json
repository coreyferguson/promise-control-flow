{
  "name": "promise-control-flow",
  "version": "0.1.1",
  "description": "Learn Promise Control Flow with Bluebird",
  "main": "src/promise-client.js",
  "devDependencies": {
    "chai": "^3.4.1",
    "chai-as-promised": "^5.2.0",
    "grunt": "~0.4.5",
    "grunt-bump": "^0.7.0",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-jscs": "^2.6.0",
    "grunt-mocha-test": "^0.12.7",
    "load-grunt-tasks": "^3.4.0",
    "mocha": "^2.3.4",
    "sinon": "^1.17.2",
    "sinon-chai": "^2.8.0"
  },
  "scripts": {
    "test": "grunt"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/coreyferguson/promise-control-flow.git"
  },
  "keywords": [
    "bluebird",
    "promise",
    "control",
    "flow",
    "collections",
    "series",
    "parallel",
    "sequence",
    "tutorial"
  ],
  "author": "Corey Ferguson <corey.t.ferguson@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/coreyferguson/promise-control-flow/issues"
  },
  "homepage": "https://github.com/coreyferguson/promise-control-flow#readme"
}
